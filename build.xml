<project name="sarasvati" default="compile">

  <property name="version" value="1.0.5"/>

  <property name="dist.dir" value="dist"/>
  <property name="build.dir" value="${dist.dir}/build"/>
  <property name="core.build.dir" value="${dist.dir}/core"/>
  <property name="lang.build.dir" value="${dist.dir}/lang"/>
  <property name="examples.build.dir" value="${dist.dir}/examples"/>
  <property name="tests.build.dir" value="${dist.dir}/tests"/>
  <property name="build.jarbase.dir" value="${build.dir}/jarbase"/>
  <property name="temp.dir" value="tmp"/>

  <property name="dist.name" value="sarasvati-java-${version}"/>
  <property name="release.name" value="sarasvati-${version}"/>
  <property name="visual.release.name" value="sarasvati-visual-${version}"/>
  <property name="editor.release.name" value="sarasvati-editor-${version}"/>

  <property name="archive.base" value="${dist.dir}/${dist.name}"/>
  <property name="fetch.indicator" value="lib/.fetchlibs"/>

  <property file="build.properties"/>

  <path id="classpath">
    <fileset dir="lib/">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="hudson">
    <fileset dir="lib/">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="hudson/lib/">
      <include name="*.jar"/>
    </fileset>
  </path>

  <taskdef name="antlr3"
           classname="org.apache.tools.ant.antlr.ANTLR3"
           classpathref="classpath"
           onerror="report"/>
  <taskdef name="findbugs"
           classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
           classpathref="hudson"
           onerror="report"/>
  <taskdef name="izpack"
           classname="com.izforge.izpack.ant.IzPackTask"
           classpath="installer/standalone-compiler-4.3.3.jar"
           onerror="report"/>
  <taskdef classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask"
  	       classpathref="classpath"
  	       name="gcupload"/>

  <available file="${fetch.indicator}" property="libs.notfetched"/>
  <available file="lib/dsls.jar" property="dsls.jar.exists"/>

  <target name="fetchlibs" if="libs.notfetched">
    <echo message="Need to fetch libraries from SVN respository. May be slow, depending on your internet connection"/>
    <copy todir="lib" flatten="true">
      <resources>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/antlr-3.1.1.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/antlr-3.1.1-runtime.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/asm.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/bsf-2.4.0.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/cglib.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/commons-collections-3.2.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/commons-logging.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/dom4j.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/eclipse-draw2d-3.5.0.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/ejb3-persistence.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/hibernate-3.2.6.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/hibernate-annotations-3.3.1.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/hibernate-commons-annotations-3.3.1.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/jta-1.1.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/org-openide-util.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/org-netbeans-api-visual.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/org-netbeans-api-visual-src.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/postgresql-8.3-603.jdbc4.jar"/>
        <url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/lib/rhino-1.6R7.jar"/>
      </resources>
    </copy>
    <copy todir="installer" flatten="true">
      <resources>
      	<url url="http://sarasvati.googlecode.com/svn/java/tags/v${version}/installer/standalone-compiler-4.3.3.jar"/>
      </resources>
    </copy>
  	<delete file="${fetch.indicator}"/>
  </target>

  <target name="buildLang">
    <mkdir dir="${lang.build.dir}/com/googlecode/sarasvati/rubric/lang"/>
    <mkdir dir="${lang.build.dir}/com/googlecode/sarasvati/join/lang"/>
    <mkdir dir="${lang.build.dir}"/>

    <antlr3 target="lang/Rubric.g"   dir="lang" outputdirectory="${lang.build.dir}/com/googlecode/sarasvati/rubric/lang"/>
    <antlr3 target="lang/JoinLang.g" dir="lang" outputdirectory="${lang.build.dir}/com/googlecode/sarasvati/join/lang"/>

    <javac srcdir="${lang.build.dir}" destdir="${lang.build.dir}" source="1.5" target="1.5" debug="true">
      <include name="**/*.java" />
      <classpath refid="classpath"/>
      <sourcepath path="src"/>
    </javac>
  </target>

  <target name="buildLangJar" depends="buildLang">
    <jar basedir="${lang.build.dir}" destfile="lib/dsls.jar">
      <include name="**/lang/RubricParser*.class"/>
      <include name="**/lang/RubricLexer*.class"/>
      <include name="**/lang/Rubric.tokens"/>

      <include name="**/lang/JoinLangParser*.class"/>
      <include name="**/lang/JoinLangLexer*.class"/>
      <include name="**/lang/JoinLang.tokens"/>
    </jar>
  </target>

  <target name="buildMissingLangJar" unless="dsls.jar.exists">
    <ant target="buildLangJar"/>
  </target>

  <target name="compile" depends="fetchlibs, buildMissingLangJar">
    <mkdir dir="${core.build.dir}" />
    <javac destdir="${core.build.dir}" source="1.5" target="1.5" debug="true">
      <src>
        <pathelement path="src"/>
        <pathelement path="visual"/>
        <pathelement path="editor"/>
      </src>
      <include name="**/*.java" />
      <classpath refid="classpath"/>
    </javac>

    <copy todir="${core.build.dir}/com/googlecode/sarasvati">
      <fileset dir="src/com/googlecode/sarasvati">
        <include name="ProcessDefinition.xsd"/>
      </fileset>
    </copy>

    <copy todir="${core.build.dir}">
      <fileset dir="editor/">
        <include name="**/*.form"/>
        <include name="**/*.properties"/>
        <include name="**/*Editor.xsd"/>
      </fileset>
    </copy>
  </target>

  <target name="compile-examples" depends="compile, buildLang">
    <mkdir dir="${examples.build.dir}" />
    <javac srcdir="examples" destdir="${examples.build.dir}" source="1.5" target="1.5" debug="true">
      <include name="**/*.java" />
      <classpath refid="classpath"/>
      <classpath path="${core.build.dir}"/>
    </javac>
  </target>

  <target name="compile-tests" depends="compile, buildLang">
    <mkdir dir="${tests.build.dir}" />
    <javac srcdir="unittest" destdir="${tests.build.dir}" source="1.5" target="1.5" debug="true">
      <include name="**/*.java" />
      <classpath refid="classpath"/>
      <classpath path="${core.build.dir}"/>
    </javac>
  </target>

  <target name="dist" depends="clean, compile, buildLang">
    <mkdir dir="${archive.base}"/>

    <copy todir="${build.jarbase.dir}">
      <fileset dir="${lang.build.dir}">
        <include name="**/lang/RubricParser*.class"/>
        <include name="**/lang/RubricLexer*.class"/>
        <include name="**/lang/Rubric.tokens"/>

        <include name="**/lang/JoinLangParser*.class"/>
        <include name="**/lang/JoinLangLexer*.class"/>
        <include name="**/lang/JoinLang.tokens"/>
      </fileset>
      <fileset dir="${core.build.dir}"/>
    </copy>

    <jar basedir="${build.jarbase.dir}" destfile="${archive.base}/${release.name}.jar">
      <exclude name="lang/com/**"/>
      <exclude name="**/visual/**"/>
      <exclude name="**/editor/**"/>
    </jar>

    <jar basedir="${build.jarbase.dir}" includes="**/visual/**" destfile="${archive.base}/${visual.release.name}.jar"/>
    <jar basedir="${build.jarbase.dir}" includes="**/editor/**" destfile="${archive.base}/${editor.release.name}.jar"/>

    <copy todir="${archive.base}">
      <fileset dir=".">
        <include name="build.xml"/>
        <include name="src/**"/>
        <include name="visual/**"/>
        <include name="editor/**"/>
      	<include name="docs/javadoc/**"/>
        <include name="examples/**"/>
        <include name="lang/**"/>
        <include name="lib/*.txt"/>
        <include name="lib/antlr3-ant.jar"/>
        <include name="README"/>
        <include name="script/run**"/>
        <exclude name="**/.svn/**"/>
      	<include name="installer/**"/>
        <exclude name="installer/*.jar"/>
      </fileset>
    </copy>

    <copy todir="${archive.base}">
      <fileset dir=".">
        <include name="db/**"/>
        <include name="common/*.license"/>
        <include name="common/*.xsd"/>
        <include name="common/test-wf/embedded-task-rej.wf.xml"/>
        <include name="common/test-wf/example1.wf.xml"/>
        <include name="common/test-wf/not-random-guard.wf.xml"/>
        <include name="common/test-wf/one-node.wf.xml"/>
        <include name="common/test-wf/random-guard.wf.xml"/>
        <include name="common/test-wf/subwf-tasks-rej.wf.xml"/>
      </fileset>
    </copy>

    <touch file="${archive.base}/${fetch.indicator}"/>

  	<mkdir dir="${archive.base}/hudson/lib"/>

    <zip destfile="${archive.base}-slim.zip" basedir="${dist.dir}" compress="true" level="9">
      <include name="${dist.name}/**"/>
    </zip>

    <delete file="${archive.base}/${fetch.indicator}"/>

    <copy todir="${archive.base}">
      <fileset dir=".">
      	<include name="lib/*.jar"/>
      	<exclude name="lib/dsls.jar"/>
      	<include name="installer/*.jar"/>
      </fileset>
    </copy>

    <zip destfile="${archive.base}.zip" basedir="${dist.dir}" compress="true" level="9">
      <include name="${dist.name}/**"/>
    </zip>


    <!-- Run installer build -->
    <echo message="Running IzPack to build the installer..."/>

    <izpack input="installer/installer.xml"
            output="${dist.dir}/sarasvati-editor-${version}-installer.jar"
            installerType="standard"
            inheritAll="true"
            basedir="."
            compression="deflate"
            compressionlevel="9"/>
    <!-- Clean working directory -->
    <echo message="Done."/>

    <!--
    <tar destfile="${archive.base}.tar" basedir="${dist.dir}" longfile="gnu">
      <include name="${dist.name}/**"/>
    </tar>
    <bzip2 src="${archive.base}.tar" destfile="${archive.base}.tar.bz2"/>
    <delete file="${archive.base}.tar"/>
    -->
  </target>

  <target name="release-core" depends="dist">
  	<gcupload username="${gcusername}"
  	          password="${gcpassword}"
  	          projectname="sarasvati"
  	          filename="${archive.base}.zip"
  	          targetfilename="${dist.name}.zip"
  	          summary="Sarasvati v${version} for Java. Includes binary, sources, javadocs, examples and all 3rd party libraries."
  	          labels="Featured, Type-Archive, Language-Java, Status-GA, OpSys-All"/>

  	<gcupload username="${gcusername}"
  	          password="${gcpassword}"
  	          projectname="sarasvati"
  	          filename="${archive.base}-slim.zip"
  	          targetfilename="${dist.name}-slim.zip"
  	          summary="Sarasvati v${version} for Java. Includes binary, sources, javadocs and examples. Slim download doesn't include all support libraries."
  	          labels="Type-Archive, Language-Java, Status-GA, OpSys-All"/>
  </target>

  <target name="release-editor" depends="dist">
  	<gcupload username="${gcusername}"
  	          password="${gcpassword}"
  	          projectname="sarasvati"
  	          filename="${dist.dir}/sarasvati-editor-${version}-installer.jar"
  	          targetfilename="sarasvati-editor-${version}-installer.jar"
  	          summary="Sarasvati Workflow Editor Installer v${version}. Executable jar built using Izpack"
  	          labels="Featured, Type-Installer, Language-Java, Status-GA, OpSys-All"/>
  </target>

  <target name="release-all" depends="release-core, release-editor"/>

  <target name="clean">
    <delete dir="${dist.dir}"/>
    <delete dir="hudson/testresults"/>
  </target>

  <target name="findbugs" depends="dist">
    <findbugs home="hudson"
              output="xml"
              outputFile="hudson/findbugs.xml"
              jvmargs="-Xmx200M">
      <sourcePath path="${basedir}/src" />
      <sourcePath path="${basedir}/visual" />
      <sourcePath path="${basedir}/editor" />
      <class location="${core.build.dir}"/>
      <auxClasspath refid="classpath"/>
    </findbugs>
  </target>

  <target name="junit" depends="compile-tests">
    <mkdir dir="hudson/testresults"/>
    <junit haltonfailure="false">
       <jvmarg value="-Xms128m"/>
       <jvmarg value="-Xmx128m"/>
       <classpath>
         <path refid="classpath"/>
         <path location="${core.build.dir}"/>
         <path location="${tests.build.dir}"/>
       </classpath>
       <formatter type="xml"/>
       <batchtest fork="yes" todir="hudson/testresults">
          <fileset dir="${tests.build.dir}">
              <include name="com/googlecode/sarasvati/unittest/**/*.class"/>
              <exclude name="**/framework/*"/>
            <exclude name="**/*$*.*"/>
          </fileset>
       </batchtest>
    </junit>
  </target>

  <!--
  <target name="generate-reports" depends="junit" description="create JUnit test HTML reports">
    <mkdir dir="hudson/testresults"/>
    <junitreport todir="hudson/testresults">
        <fileset dir="hudson/testresults">
            <include name="TEST-*.xml"/>
        </fileset>
        <report format="frames" todir="${reports}"/>
    </junitreport>

  </target>
  -->

  <target name="hudson" depends="findbugs, junit"/>

  <target name="javadoc" depends="compile">
    <javadoc access="public"
             author="true"
             classpathref="classpath"
             destdir="docs/javadoc"
             nodeprecated="false"
             nodeprecatedlist="false"
             noindex="false"
             nonavbar="false"
             notree="false"
             source="1.6"
             splitindex="true"
             version="true"
             use="true"
             windowtitle="Sarasvati ${version} API">
      <fileset dir=".">
        <include name="src/**/*.java"/>
        <include name="visual/**/*.java"/>
      </fileset>
      <link href="http://java.sun.com/javase/6/docs/api/"/>
    </javadoc>
  </target>

</project>

